% author: Claudio Gaz, Marco Cognetti, Alexander Oliva
% date: September 3, 2019
% 
% -------------------------------------------------
% Panda Dynamic Model v. 1.0
% -------------------------------------------------
% C. Gaz, M. Cognetti, A. Oliva, P. Robuffo Giordano, A. De Luca, 'Dynamic
% Identification of the Franka Emika Panda Robot With Retrieval of Feasible
% Parameters Using Penalty-Based Optimization'. IEEE RA-L, 2019.
%
% the following code has been tested on Matlab 2018b

% get_FrictionTorque returns the numerical joint friction torque vector 
% tau_f(qdot), given the current joint velocities

function tau_F = get_FrictionTorque(qdot)
% 
    %fp = [0.373435005778462 0.779438633525773 1.05319746628166 1.30699077292041 0.760490064004486 0.267372145253112 0.514548100381355;-0.314377611788848 -0.303024087946486 -0.412862490039403 -0.668805237057400 -0.442512328830700 -0.136837118930371 -0.262740677360176;-0.0557978848061109 0.167756635299383 -0.0542424073368835 0.0970046857979864 -0.000143663354153322 -0.0140823750469920 0.0153009801710737;27.3723492649508 11.4908808933436 4.29805286470002 5.74607018076326 22.4516265208879 32.4757583929726 19.8576177883689];
    
    %fp = [0.612653971159382 0.934499162840862 0.646742288273140 1.28084112769378 0.840716954027353 0.304949289107874 0.564819905787364;-0.303927486994649 -0.547360612104706 -0.254436498341632 -0.713545364821145 -0.465546161627720 -0.124024091500591 -0.287361519351861;-0.257134321001524 0.237301621230032 -0.0214959050834782 0.0980488313915574 0.0176836101306286 -0.0454471902752525 0.000546336189018487;3.11948922387669 10.0061416271310 9.17413047372734 5.80652630870565 8.04527721775406 16.1730803961433 10.3640391982759];
    
%     fp = [...
%     0.61265,0.9345,0.64674,1.2808,0.84072,0.30495,0.56482;...
%     -0.30393,-0.54736,-0.25444,-0.71355,-0.46555,-0.12402,-0.28736;...
%     -0.25713,0.2373,-0.021496,0.098049,0.017684,-0.045447,0.00054634;...
%     3.1195,10.006,9.1741,5.8065,8.0453,16.173,10.364];

    fp = [...
        0.54615,0.87224,0.64068,1.2794,0.83904,0.30301,0.56489;...
        0,0,0,0,0,0,0;...
        0.039533,0.025882,-0.04607,0.036194,0.026226,-0.021047,0.0035526;...
        5.1181,9.0657,10.136,5.5903,8.3469,17.133,10.336];

    A = fp(1,:);
    k = fp(2,:);
    qdotsign = fp(3,:);
    alpha= fp(4,:);
    
    num_of_joints = length(qdot);
    tau_F = zeros(num_of_joints,1);
    
    for i=1:num_of_joints
        %tau_F(i) = k(i) + A(i)/(1+exp(-alpha(i)*(qdot(i)+qdotsign(i))));
        tau_F(i) = -A(i)/(1+exp(-alpha(i)*qdotsign(i))) + A(i)/(1+exp(-alpha(i)*(qdot(i)+qdotsign(i))));
    end


% %--------------------------------
% % sign function
% %--------------------------------
% A = [0;0;0;0.5;0.5;0.15;0.3];
% 
% tau_F = A.*sign(qdot);